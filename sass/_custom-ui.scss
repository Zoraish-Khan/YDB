h1,h2,h3,h4,h5,h6{
    color: var(--#{$prefix}heading);
}

.h5,h5{
    font-size: 1rem;
}
h6{
    font-size: .8rem;
}
.heading{
    color: $heading;
}
.color-default{
    color: $color-default;
}
small,.small{
    font-size: .75rem !important;
}
.material-symbols-outlined{
    font-size: 1.25rem;
}

.hr-dashed{
    width: 100%;
    height: 1px;
    margin: 1rem 0;
    border-top: 1px dashed $input-border-color;
}
.card{
    --#{$prefix}card-border-radius: #{.5rem};
    .card-header{
        background-color: darken($body-bg,2%);
    }
}
// bootstrap custom ui classes
.btn-close{
    &.fixed-right{    
        border-radius: 50%;
        height: 1em;
        width: 1em;
        position: absolute;
        right: -5px;
        top: -5px;
        opacity: 1;
        z-index: 1056;
    }
}
.dropdown-menu{
    --#{$prefix}dropdown-border-color: #{$card-border-color};
}

.menu-dropdown{
    @include dropdownAnim;
    @include animDuration(.3s);
    animation-fill-mode: both;
    position: absolute;
    border: 0 solid $border-color;
}



// backgroound color 
//transparent background colors

@each $color,
$value in $theme-colors{
    .bg-rgba-#{$color}{
        background-color: rgba($value,15%) !important;
        color: $value;
        
    }
}

// list group custom color
@each $color,
$value in $theme-colors {
    .list-group-bg-rgba-#{$color} {
        //background-color: $value;
        border-color: $value;
        color: $white;
        &:hover{
            color: $white;
        }
        
        .list-group-item {
            &.active {
                background-color: rgba($value,12%) !important;
                color: $value !important;
                border-color: $value;
            }
        }
    }
}



@each $color,
$value in $theme-colors {
    .bg-lighten-#{$color} {
        background-color: rgba($value,15%);
        color: $value;
    }
}
// table head bg
@each $color,
$value in $theme-colors {
    .table-bg-lighten-#{$color} {
        background-color: rgba($value,15%);
        
    }
}

// avatar frame size scss start here
$avatar-size:(
    xs: 2rem,
    sm: 3rem,
    md: 4rem,
    lg: 6rem,
    xl: 7.51rem,
    xxl: 10rem,
);
@each $name, $size in $avatar-size{
    .avatar-#{$name}{
        height: $size;
        width: $size;
        position: relative;
    }
}

.absolute-img{
    position: relative;
    border-radius: .25rem;
    overflow: hidden;
    .frame{
        max-width: 100%;
        max-height: 100%;
        position: absolute;
        @include inset-all;
    }
    img{
        @extend .frame;
        object-fit: cover;
        border-radius: .25rem;
    }
}




// custom tabs
.custom-tab-hb{
    --#{$prefix}nav-tabs-link-active-border-color: #{$nav-tabs-link-active-border-color};
    border-color: transparent;
    border-bottom: 1px solid var(--#{$prefix}nav-tabs-border-color);
    
    .nav-link{
        color: $color-default;
        border-bottom-width: 2px;
        &:hover,
    &:focus {
      // Prevents active .nav-link tab overlapping focus outline of previous/next .nav-link
      isolation: isolate;
      border-color: transparent;
    }
    }
    .nav-link.active,
    .nav-item.show .nav-link {
      color: var(--#{$prefix}primary);
      background-color: var(--#{$prefix}nav-tabs-link-active-bg);
      border-color: transparent;
      border-bottom-color: var(--#{$prefix}primary) ;
     
    }
}

@each $color,
$value in $theme-colors{
    .nav-pills-rgba-#{$color}{
        .nav-link{
            
            &.active{
                color: $value;
                background-color: $white;
            }
        }
    }
}

// custom checkbox and radio
///////////////////////////////////////////////////////////////////
.custom-check{
    position: relative;    
    padding: 0;
    input{
        position: absolute;
        right: 0.75rem;
        top: 0.45rem;
        z-index: 10;
    }
    label{
        width: 100%;
        position: relative;
        padding: 0.435rem 0.75rem;
        font-weight: 400;
        z-index: 1;
        
        &::before{
            content: '';
            width: 100%;
            height: 100%;
            position: absolute;
            border-radius: $border-radius;
            top: 0;
            left: 0;
            border: 1px solid $input-border-color;
            z-index: -1;
            background-color: $white;
        }
    }
    .form-check-input:checked ~ .form-check-label{
        color: $input-color;
        &::before{
            border: 1px solid $primary;
            z-index: -1;
        }
    }
}
// checkbox and radios
@each $color,
$value in $theme-colors{
    .form-check-#{$color}{
        &.form-check{
            
            .form-check-input:checked{
                background-color: $value;
                border-color: $value;
                &:focus{
                    box-shadow: 0 0 0 .25rem rgba($value,20%);
                }
            }
        }
    }
}


@each $color,
$value in $theme-colors{
    .form-check-outline-#{$color}{
        &.form-check{
            .form-check-input{
                position: relative;
                
                &:focus{
                    box-shadow: none;
                }
                &:checked[type=checkbox]{
                    color: $value;
                    border-color: $value;
                    background: none;

                    &::before{
                        content: '\F26E';
                        font-family: bootstrap-icons;
                        position: absolute;
                        top: -4px;
                        left: -1px;
                    }
                }
                // custom radio
                &:checked[type=radio]{
                    color: $value;
                    border-color: $value;
                    background: none;

                    &::before{
                        content: '\F287';
                            font-family: bootstrap-icons;
                            position: absolute;
                            top: 1px;
                            left: 2.5px;
                            font-size: 7px;
                    }
                }
            }
        }
    }
}
.star-checkbox,.heart-checkbox{
    transition: background-position .15s ease-in-out;    
    background-position: center center;
    background-repeat: no-repeat;
    /* background-color: var(--white); */
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    -webkit-print-color-adjust: exact;
    print-color-adjust: exact;
    margin-left: -1.5rem;
    border: 0;
    height: 16px;
    width: 16px;
}
.triangle-right{
    .heart-checkbox,
    .star-checkbox{
        transform: rotate(45deg);
        -transform: rotate(45deg);
    }
} 
.heart-checkbox{
    background-image: url(../img/heart.svg);
    &:checked{
        background-image: url(../img/heart-fill.svg);
    }
}

.star-checkbox{
    background-image: url(../img/star-outline.svg);
    &:checked{
        background-image: url(../img/star-fill.svg);
    }
}

// card check
///////////////////////////////////////////////////
.card-check{
    &.custom-check{
        position: relative;    
        padding: inherit;
        border-color: transparent;
        z-index: 100;
        background-color: transparent;
    input{
        position: absolute;
        right: 0.75rem;
        top: 0.45rem;
        z-index: 10;
    }
    label{
        position: absolute;
        left: 0;
        height: 100%;
        z-index: -1;
        background-color: $white;
        border-radius: .35rem;
        &::before{
            border-color: $border-color;
           ;
        }
    }
}
}
.btn-clear{
    border-color: $input-border-color;
    padding: 0.375rem 0.75rem;
    line-height: 1.5;
    font-size: 0.9rem;
    &:hover{
        background-color: $input-border-color;
    }
}

.collapseDiv{
    display: block;
    position: relative;
    border-bottom: 1px solid $border-color;
    border-radius: .3rem .3rem 0 0;
    padding: .5rem 1rem;
    h5{
        margin-bottom: 0;
    }
    
    &::after {
        display: block;
        content: "\f282";
        font-family: "bootstrap-Icons";
        margin-left: auto;
        -webkit-transition: -webkit-transform .2s;
        transition: -webkit-transform .2s;
        transition: transform .2s;
        transition: transform .2s, -webkit-transform .2s;
        font-size: 1.05rem;
        position: absolute;
        top: .125rem;
        right: 1rem;
        color: $heading;
    }
    &.collapsed{ 
        &::after{
            -webkit-transform: rotate(-180deg);
            transform: rotate(-180deg);
        }
    }

}

.v-seprator{
    position: relative;
    &::before {
        content: "";
        width: 1px;
        height: calc(100% - 1rem);
        position: absolute;
        top: 0;
        left: 50%;
        transform: translateX(-50%);
        border-left: 1px dashed #E8EDF2;
    }
}
// seprate table

.separated-table-wrap{
    .table {
        border-collapse: separate;
        border-spacing: 0 .75rem;
        margin-top: -1rem;
        padding: 0 1rem 1rem 1rem;
        thead{
            transform: scale(.99);
        }
        tr{
            &.scale-up{
            // box-shadow: 0 0 1px rgba($black,25%);
            transition: ease-in-out .5s all;
            -webkit-transition: ease-in-out .5s all;
            transform: scale(.99);
            background-color: lighten($color-default,52%);

            &:hover{
                transform: scale(1);
                box-shadow: 0 0 8px rgba($black,20%);
            }
        }
            > td{
                vertical-align: middle;
                color: lighten($color-default,20%);
                border: 0;
                .read-smore__link{
                    color: $color-default;
                    font-size: .75rem;
                }
            }
        }
    }
}

// ribon box

@each $color,
$value in $theme-colors{
    .ribbon-#{$color}{
        color: $white;
        background-color: $value;
        &.ribbon-shape{
            &::before{
                background-color: $value;
            }
            &::after{
                background-color: lighten($value,30%);
            }
        }
    }
    // .ribbon-box{
    //     .ribbon-shape{
    //         &::before{
    //             border-right-color: $value;
    //             border-top-color: $value;
    //         }
    //     }
    // }
    
}
.ribbon-box {
    position: relative;
    
    .ribbon {
        padding: 5px 12px;
        -webkit-box-shadow: 2px 5px 10px rgba(6, 40, 61, .15);
        box-shadow: 2px 5px 10px rgba(6, 40, 61, .15);
        color: #fff;
        font-size: .9063rem;
        font-weight: 600;
        position: absolute;
        left: -1px;
        top: 10px;
        z-index: 11;
        &.round-shape {
            border-radius: 0 30px 30px 0;
        }
        &.ribbon-shape {
            display: inline-block;
            &::after,&::before{
                content: "";
                position: absolute;
                border-radius: 5px 0 0 5px;
            }
            &::before {
                width: 7px;
                height: 124%;
                top: 0;
                left: -6.5px;
                padding: 0 0 7px;
            }
            &::after {
                width: 5px;
                height: 5px;
                bottom: -5px;
                left: -4.5px;
            }

        }
    }
    // ribbon right
    &.ribbon-right{
        .ribbon{
            left: auto;
            right: 0;
            &.ribbon-shape{
            &::before {
                right: -6.5px;
                left: auto;
                border-radius: 0 5px 5px 0;
            }
            &::after {
                right: -4.5px;
                left: auto;
                border-radius: 0 5px 5px 0;
            }
        }
        }

    }
}




@each $color,
$value in $social-colors{
    .btn-outline-#{$color}{
        border-color: $value;
        color: $value;
        &:hover,&:focus{
            color: $white;
            background-color: $value;
            background-image: none;
            box-shadow: none;
        }
    }
}
/*____ pagination css___ */
.pagination {
    display: -ms-flexbox;
    display: flex;
    padding-left: 0;
    list-style: none;
    border-radius: .25rem;

    .page-item{
        &:first-child{
            .page-link {
                margin-left: 0;
                border-top-left-radius: 50%;
                border-bottom-left-radius: 50%;
                border-color: transparent;
            }
        }
        &:last-child{
            .page-link {
                border-top-right-radius: 50%;
                border-bottom-right-radius: 50%;
                border-color: transparent;
            }
        }
    }
    .page-link {
        position: relative;
        display: flex;
        align-items: center;
        justify-content: center;
        @extend .avatar-xs;
        margin: 0 .5em;
        color: $color-default;
        background-color: $white;
        border: 1px solid $input-border-color;
        border-radius: 50%;
    } 
}


.no-border{
    .page-link{
        border: 0;
    }
}
.page-item{
    &.active{
        .page-link{
            z-index: 1;
            color: $white;
            border-color: $primary;
            background-color: $primary;
        }
    }
    .page-link{
        &:hover,&:active,&.active{
            z-index: 1;
            color: $white;
            border-color: $primary;
            background-color: $primary;
        }
    }
}

.page-link{
    &:focus {
        z-index: 2;
        outline: 0;
        box-shadow:none;
    }
}

.pagination-left{
    display: flex ;    
    justify-content:flex-start;   
}
.pagination-center{
    display: flex ;    
    justify-content: center;   
}
.pagination-right{
    display: flex ;    
    justify-content:flex-end;   
}


$w:1;

@while $w <= 1000{
    .h-#{$w}-px{
        height: $w * 1px;
    }
    .mxh-#{$w}-px{
        max-height: $w * 1px;
    }
    .w-#{$w}-px{
        width: $w * 1px;
    }
    .mxw-#{$w}-px{
        max-width: $w * 1px;
    }
    $w: $w + 1;
}
$px:1;

// height width togather
$hw:1;
@while $hw <= 300{
    .hw-#{$hw}-px{
        height: $hw * 1px;
        width: $hw * 1px;
    }
    $hw : $hw + 1;
}

@while $px <= 100{
    .top-#{$px}{
        top: $px * 1px !important;
    }
    .right-#{$px}{
        top: $px * 1px !important;
    }
    .bottom-#{$px}{
        top: $px * 1px !important;
    }
    .left-#{$px}{
        top: $px * 1px !important;
    }
    $px : $px + 1;
}

.e-h{
    [class*="col-"]{
        margin-bottom: 1rem;
        .card{
            height: 100%;
            .card{
                height: inherit;
            }
        }
        .row{
            [class*="col-"]{
                margin-bottom: 0;
            }
        }
    }
}

// form scss
//=================================


.form-control-lg,.form-select-lg{
    padding: .75rem 1rem;
}
.form-control-lg{
    &::file-selector-button{
        padding: .75rem 1rem;
        margin-top: -.75rem;
        margin-bottom: -.75rem;
        
    }
}
.form-switch{
    &.form-switch-lg{
        .form-check-input{
            height: 1.5em;
            width: 3em;
        }
        label{
            margin-top: .15rem;
            margin-left: .3rem;
        }
    }
}
//
.btn-flex{
    display: inline-flex;
    align-items: center;
    justify-content: center;
}

@each $color,$value in $theme-colors{
    .btn-outline-custom{    
        &.outline-#{$color}{
            border-color: $value;
            
        }
        &.outline-hover-#{$color}{
            &:hover{
                border-color: $value;
                color: $value;
            }
        }
        &.bg-hover-#{$color}{
            &:hover{
                border-color: $value;
                color: $white;
                background-color: $value;
            }
        }
    }
}
.btn-outline-custom{
    box-shadow: none;

    &:hover{
        color: var(--#{$prefix}primary);
    }
}


.table.table-wide> :not(caption) > * > *{
    padding: 1rem;
}